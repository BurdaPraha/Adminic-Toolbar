<?php

use Drupal\Core\Url;

include 'adminic_toolbar.inc';

/**
 * Implements hook_toolbar();
 *
 * @return array|null
 */
function adminic_toolbar_toolbar() {
  $user = \Drupal::currentUser();
  if ($user->hasPermission('access toolbar')) {

    $items = [];

    // Home Button.
    $items['adminic_home'] = [
      '#type'               => 'toolbar_item',
      'tab'                 => [
        '#type'       => 'link',
        '#title'      => t('Home'),
        '#url'        => Url::fromRoute('<front>'),
        '#attributes' => [
          'title' => t('Return to site content'),
          'class' => ['front', 'toolbar-icon', 'toolbar-icon-escape-admin'],
        ],
        '#cache'      => [
          'contexts' => ['user',],
        ],
      ],
      '#wrapper_attributes' => [
        'class' => [],
      ],
      '#weight'             => -99,
    ];

    // Content Administration.
    $items['adminic_content'] = [
      '#type'   => 'toolbar_item',
      'tab'     => [
        '#type'       => 'link',
        '#title'      => t('Content'),
        '#url'        => Url::fromRoute('system.admin_content'),
        '#attributes' => [
          'title' => t('My account'),
          'class' => ['toolbar-icon', 'toolbar-icon-adminic-content'],
        ],
        '#cache'      => [
          'contexts' => ['user',],
        ],
      ],
      'tray'    => [
        '#heading' => t('Content'),
        'conten' => get_content_manage(),
      ],
      '#weight' => 100,
    ];

    // Modules.
    if ($user->hasPermission('administer modules')) {
      $items['adminic_extend'] = [
        '#type'   => 'toolbar_item',
        'tab'     => [
          '#type'       => 'link',
          '#title'      => t('Extend'),
          '#url'        => Url::fromUserInput('/admin/modules'),
          '#attributes' => [
            'title' => t('Modules'),
            'class' => ['toolbar-icon', 'toolbar-icon-adminic-extend'],
          ],
          '#cache'      => [
            'contexts' => ['user',],
          ],
        ],
        '#weight' => 80,
      ];
    }

    // Themes.
    if ($user->hasPermission('administer themes')) {
      $items['adminic_appearance'] = [
        '#type'   => 'toolbar_item',
        'tab'     => [
          '#type'       => 'link',
          '#title'      => t('Appearance'),
          '#url'        => Url::fromUserInput('/admin/appearance'),
          '#attributes' => [
            'title' => t('Appearance'),
            'class' => ['toolbar-icon', 'toolbar-icon-adminic-appearance'],
          ],
          '#cache'      => [
            'contexts' => ['user',],
          ],
        ],
        '#weight' => 81,
      ];
    }

    // Config Administration.
    $items['adminic_config'] = [
      '#type'   => 'toolbar_item',
      'tab'     => [
        '#type'       => 'link',
        '#title'      => t('Config'),
        '#url'        => Url::fromUserInput('/admin/config'),
        '#attributes' => [
          'title' => t('Config'),
          'class' => ['toolbar-icon', 'toolbar-icon-adminic-config'],
        ],
        '#cache'      => [
          'contexts' => ['user',],
        ],
      ],
      'tray'    => [
        '#heading'     => t('Content'),
        'content' => get_config_manage(),
      ],
      '#weight' => 101,
    ];

    return $items;
  }

  return NULL;

}

function get_content_manage() {
  $content_manage = array();
  $content_manage['nodes'] = manage_nodes();
  $content_manage['terms'] = manage_terms();
  $content_manage['blocks'] = manage_blocks();
  $content_manage['media'] = manage_media();
  $content_manage['comments'] = manage_comments();
  return $content_manage;
}

function get_config_manage() {
  $config_manage = array();
  $config_manage['paragraphs'] = manage_paragraphs();
  $config_manage['views'] = manage_views();
  $config_manage['image_styles'] = manage_image_styles();
  $config_manage['menus'] = manage_menus();
  return $config_manage;
}
/**
 * Implements hook_toolbar_alter();
 *
 * @param $items
 */
function adminic_toolbar_toolbar_alter(&$items) {
  unset($items['home']);
  unset($items['admin_toolbar_tools']);
  $items['user']['#wrapper_attributes']['class'][] = 'right';
  foreach ($items as $key => $tab) {
    $items[$key]['#wrapper_attributes']['class'][] = $key;
  }
  $items['user']['#wrapper_attributes']['class'][] = 'right';
  $items['adminic_home']['#weight'] = -99;
  $items['adminic_content']['#weight'] = 0;
  $items['adminic_config']['#weight'] = 1;
  $items['adminic_extend']['#weight'] = 2;
  $items['adminic_appearance']['#weight'] = 3;
  $items['administration']['#weight'] = 10;
  $items['shortcuts']['#weight'] = 11;
  $items['devel']['#weight'] = 12;
  $items['coffee']['#weight'] = 13;
  $items['contextual']['#weight'] = 99;
  $items['user']['#weight'] = 99;
  $items['admin_toolbar_tools']['#wrapper_attributes']['class'][] = 'hidden';
}

/**
 * Implements hook_page_attachments();
 *
 * @param array $attachments
 */
function adminic_toolbar_page_attachments(array &$attachments) {
  $attachments['#attached']['library'][] = 'adminic_toolbar/global-styling';
}

/**
 * Implements hook_css_alter();
 *
 * @param $css
 * @param \Drupal\Core\Asset\AttachedAssetsInterface $assets
 */
function adminic_toolbar_css_alter(&$css, \Drupal\Core\Asset\AttachedAssetsInterface $assets) {
  // Remove Toolbar Styling
  $toolbar_path = drupal_get_path('theme', 'stable');
  unset($css[$toolbar_path . '/css/toolbar/toolbar.menu.css']);
  unset($css[$toolbar_path . '/css/toolbar/toolbar.module.css']);
  unset($css[$toolbar_path . '/css/toolbar/toolbar.theme.css']);
  unset($css[$toolbar_path . '/css/toolbar/toolbar.icons.theme.css']);

  // Remove Admin Toolbar Styling
  $admin_toolbar_path = drupal_get_path('module', 'admin_toolbar');
  unset($css[$admin_toolbar_path . '/css/admin.toolbar.css']);

  // Remove Devel Toolbar
  $devel_path = drupal_get_path('module', 'devel');
  unset($css[$devel_path . '/css/devel.toolbar.css']);

  // Remove Admin Toolbar Asset
  foreach ($assets as $key => $asset) {
    if ($asset == 'admin_toolbar/toolbar.tree') {
      unset($assets[$key]);
    }
  }
}

/**
 * Implements hook_theme().
 */
function adminic_toolbar_theme() {
  return [
    'adminic_content_bundler' => [
      'variables' => [
        'title'           => NULL,
        'links'           => [],
        'collection_url'  => NULL,
        'add_bundle_url'  => NULL,
        'add_bundle_text' => NULL,
      ],
    ],
  ];
}
